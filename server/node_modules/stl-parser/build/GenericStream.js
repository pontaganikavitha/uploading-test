// Generated by CoffeeScript 1.10.0
(function() {
  var GenericStream, stream,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  stream = require('stream');

  GenericStream = (function(superClass) {
    extend(GenericStream, superClass);

    function GenericStream(data, options) {
      this.data = data;
      this.options = options != null ? options : {};
      GenericStream.__super__.constructor.call(this, this.options);
    }

    GenericStream.prototype._read = function() {
      this.push(this.data);
      return this.push(null);
    };

    return GenericStream;

  })(stream.Readable);

  module.exports = GenericStream;

}).call(this);
